/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* some browsers have issues or extra things, so we're resetting all the styles with the universal selector */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box; /* no border size added by default */
}

/* inherited styles are passed in, hence why we're doing this in the body tag. Better than universal selector */
body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777777;
    padding: 24px; /* white padding around full page */
}

.header {
    height: 95vh;
    /* apply linear gradient over background image, order matters for priority*/
    background-image: linear-gradient(
        to right bottom,
         rgba(126, 213, 111, 0.8),
         rgba(40, 180, 133, 0.8)),
          url("../img/hero.jpg"
    );
    background-size: cover;
    background-position: top;
    position: relative; /* doing this so we can relatively position child elements inside the header */
    clip-path: polygon(0% 0%, 100% 0%, 100% 80%, 0% 100%);
    /* clip-path: polygon(50% 0, 100% 100%, 0 100%); Use https://bennettfeely.com/clippy/ for clip path generation */
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px;
}

.text-box {
    position: absolute;
    /* The problem with centering using just top and left is that we put the top left corner of the div at 50% not the center of the div */
    top: 40%;
    left: 50%;
    /* To fix the div centering, we need to move the origin point of the div to the 50/50 mark */
    transform: translate(-50%, -50%);
    /* Make sure that text align in the parent div for it to effect children */
    text-align: center;
}

.heading-primary {
    color: #ffffff;
    text-transform: uppercase;

    backface-visibility: hidden;
    margin-bottom: 64px;
}

.heading-primary-main {
    /* block elements occupy 100% of the width of the element */
    display: block; 
    font-size: 64px;
    font-weight: 400;
    letter-spacing: 32px;
    
    /* add in animation and duration of it here */
    animation-name: moveInLeft;
    animation-duration: 1s;

    /*
    animation-delay: 1s; -- used for when you want to start an animation later
    animation-iteration-count: 3; -- animation happens 3 times
    animation-timing-function: ease-in; defines the acceleration of how fast to complete the frames
    */
}

.heading-primary-sub {
    display: block;
    font-size: 24px;
    font-weight: 700;
    letter-spacing: 16px;

    /* add in animation and duration of it here */
    /* animation-name: moveInRight;
    animation-duration: 1s; */

    /* we can simplify the animation using this one-liner */
    animation: moveInRight 1s;
}

/* create an animation */
@keyframes moveInLeft {
    /* we can define what should happen in the animation at whatever percentage is completed */
    0% {
        opacity: 0;
        transform: translateX(-128px);
    }

    /* Just rotations fun */
    /* 60% {
        transform: rotate3d(1, -1, 5, 180deg);
    } */

    /* Adding in slight bounce back */
    80% {
        transform: translateX(16px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

/* create an animation */
@keyframes moveInRight {
    /* we can define what should happen in the animation at whatever percentage is completed */
    0% {
        opacity: 0;
        transform: translateX(128px);
    }

    /* Adding in slight bounce back */
    80% {
        transform: translateX(-16px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    /* we can define what should happen in the animation at whatever percentage is completed */
    0% {
        opacity: 0;
        transform: translateY(32px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

/* this is a link pseudo class --> style elements under special conditions */
.btn:link,
/* this is the visited state after the user has interacted with the element */
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;

    border-radius: 100px;
    /* defines how long our transition should take to the other pseudo states (hover/active) should be on the root class */
    transition: all 0.2s;
    position: relative;
}

.btn:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.23);
}

/* on click what we should do */
.btn:active {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.23);
}

.btn-white {
    background-color: #ffffff;
    color: #777777;
}

.btn-animated {
    animation: moveInBottom 0.5s ease-out 0.9s;
    animation-fill-mode: backwards; /* will put in the animation style of 0% on page load */
}

/* does things after the click */
.btn::after {
    /* Content and display need to be defined */
    content: "";
    display: inline-block;

    /* This would be 100% the height + width of the button */
    height: 100%;
    width: 100%;
    border-radius: 100px;

    /* but this new button behind the current one (need to also make parent button relative) */
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;

    /* add in our transition */
    transition: all .4s;
}

.btn-white::after {
    background-color: #ffffff;
}

.btn:hover::after {
    transform: scale(1.5);
    opacity: 0;
}